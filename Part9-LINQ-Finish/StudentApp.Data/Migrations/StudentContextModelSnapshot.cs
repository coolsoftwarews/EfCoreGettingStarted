// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentApp.Data;

#nullable disable

namespace StudentApp.Data.Migrations
{
    [DbContext(typeof(StudentContext))]
    partial class StudentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StudentApp.Core.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Courses", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Maths are awesome",
                            Name = "Maths"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Big Bang",
                            Name = "Science"
                        });
                });

            modelBuilder.Entity("StudentApp.Core.Domain.CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedCourseDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("TerminateCourseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");

                    b.HasData(
                        new
                        {
                            CoursesId = 1,
                            StudentsId = 1,
                            JoinedCourseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CoursesId = 2,
                            StudentsId = 1,
                            JoinedCourseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CoursesId = 1,
                            StudentsId = 2,
                            JoinedCourseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CoursesId = 2,
                            StudentsId = 2,
                            JoinedCourseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StudentApp.Core.Domain.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Grade 1",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Grade 2",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Grade 3",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Grade 4",
                            TeacherId = 4
                        });
                });

            modelBuilder.Entity("StudentApp.Core.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1402),
                            FirstName = "Anthony",
                            GradeId = 1,
                            LastName = "Walsh"
                        },
                        new
                        {
                            Id = 2,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1422),
                            FirstName = "Kevin",
                            GradeId = 1,
                            LastName = "Mcguire"
                        },
                        new
                        {
                            Id = 3,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1424),
                            FirstName = "Rodney",
                            GradeId = 1,
                            LastName = "Benson"
                        },
                        new
                        {
                            Id = 4,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1426),
                            FirstName = "Patrick",
                            GradeId = 1,
                            LastName = "Lewis"
                        },
                        new
                        {
                            Id = 5,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1429),
                            FirstName = "Debbie",
                            GradeId = 1,
                            LastName = "Green"
                        },
                        new
                        {
                            Id = 6,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1431),
                            FirstName = "Jim",
                            GradeId = 1,
                            LastName = "Collier"
                        },
                        new
                        {
                            Id = 7,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1432),
                            FirstName = "Rebecca",
                            GradeId = 1,
                            LastName = "Schwartz"
                        },
                        new
                        {
                            Id = 8,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1434),
                            FirstName = "Brianna",
                            GradeId = 1,
                            LastName = "Moon"
                        },
                        new
                        {
                            Id = 9,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1437),
                            FirstName = "Curtis",
                            GradeId = 1,
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 10,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1438),
                            FirstName = "Amanda",
                            GradeId = 1,
                            LastName = "Weber"
                        },
                        new
                        {
                            Id = 11,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1440),
                            FirstName = "Melissa",
                            GradeId = 2,
                            LastName = "Tucker"
                        },
                        new
                        {
                            Id = 12,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1442),
                            FirstName = "Steven",
                            GradeId = 2,
                            LastName = "Ramirez"
                        },
                        new
                        {
                            Id = 13,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1444),
                            FirstName = "Tara",
                            GradeId = 2,
                            LastName = "Hawkins"
                        },
                        new
                        {
                            Id = 14,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1446),
                            FirstName = "David",
                            GradeId = 2,
                            LastName = "Burton"
                        },
                        new
                        {
                            Id = 15,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1448),
                            FirstName = "Daniel",
                            GradeId = 2,
                            LastName = "Hamilton"
                        },
                        new
                        {
                            Id = 16,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1450),
                            FirstName = "Tammy",
                            GradeId = 2,
                            LastName = "Velazquez"
                        },
                        new
                        {
                            Id = 17,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1457),
                            FirstName = "Samuel",
                            GradeId = 3,
                            LastName = "Price"
                        },
                        new
                        {
                            Id = 18,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1459),
                            FirstName = "Mikayla",
                            GradeId = 3,
                            LastName = "Santos"
                        },
                        new
                        {
                            Id = 19,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1461),
                            FirstName = "Tammy",
                            GradeId = 3,
                            LastName = "Stephenson"
                        },
                        new
                        {
                            Id = 20,
                            DOB = new DateTime(2016, 4, 2, 15, 34, 50, 625, DateTimeKind.Local).AddTicks(1463),
                            FirstName = "Michael",
                            GradeId = 3,
                            LastName = "Manning"
                        });
                });

            modelBuilder.Entity("StudentApp.Core.Domain.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Mr. T",
                            LastName = "Williams"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ms. A",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Ms. W",
                            LastName = "White"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Mr. D",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("StudentApp.Core.Domain.CourseStudent", b =>
                {
                    b.HasOne("StudentApp.Core.Domain.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentApp.Core.Domain.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentApp.Core.Domain.Grade", b =>
                {
                    b.HasOne("StudentApp.Core.Domain.Teacher", null)
                        .WithOne("Grade")
                        .HasForeignKey("StudentApp.Core.Domain.Grade", "TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentApp.Core.Domain.Student", b =>
                {
                    b.HasOne("StudentApp.Core.Domain.Grade", "Grade")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("StudentApp.Core.Domain.Grade", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentApp.Core.Domain.Teacher", b =>
                {
                    b.Navigation("Grade")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
